
bof:     file format elf32-i386


Disassembly of section .init:

00000474 <_init>:
 474:	53                   	push   ebx
 475:	83 ec 08             	sub    esp,0x8
 478:	e8 00 00 00 00       	call   47d <_init+0x9>
 47d:	5b                   	pop    ebx
 47e:	81 c3 77 1b 00 00    	add    ebx,0x1b77
 484:	8b 83 f4 ff ff ff    	mov    eax,DWORD PTR [ebx-0xc]
 48a:	85 c0                	test   eax,eax
 48c:	74 05                	je     493 <_init+0x1f>
 48e:	e8 7d 00 00 00       	call   510 <__gmon_start__@plt>
 493:	e8 58 01 00 00       	call   5f0 <frame_dummy>
 498:	e8 93 02 00 00       	call   730 <__do_global_ctors_aux>
 49d:	83 c4 08             	add    esp,0x8
 4a0:	5b                   	pop    ebx
 4a1:	c3                   	ret    

Disassembly of section .plt:

000004b0 <.plt>:
 4b0:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
 4b6:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
 4bc:	00 00                	add    BYTE PTR [eax],al
	...

000004c0 <gets@plt>:
 4c0:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
 4c6:	68 00 00 00 00       	push   0x0
 4cb:	e9 e0 ff ff ff       	jmp    4b0 <.plt>

000004d0 <__stack_chk_fail@plt>:
 4d0:	ff a3 10 00 00 00    	jmp    DWORD PTR [ebx+0x10]
 4d6:	68 08 00 00 00       	push   0x8
 4db:	e9 d0 ff ff ff       	jmp    4b0 <.plt>

000004e0 <__cxa_finalize@plt>:
 4e0:	ff a3 14 00 00 00    	jmp    DWORD PTR [ebx+0x14]
 4e6:	68 10 00 00 00       	push   0x10
 4eb:	e9 c0 ff ff ff       	jmp    4b0 <.plt>

000004f0 <puts@plt>:
 4f0:	ff a3 18 00 00 00    	jmp    DWORD PTR [ebx+0x18]
 4f6:	68 18 00 00 00       	push   0x18
 4fb:	e9 b0 ff ff ff       	jmp    4b0 <.plt>

00000500 <system@plt>:
 500:	ff a3 1c 00 00 00    	jmp    DWORD PTR [ebx+0x1c]
 506:	68 20 00 00 00       	push   0x20
 50b:	e9 a0 ff ff ff       	jmp    4b0 <.plt>

00000510 <__gmon_start__@plt>:
 510:	ff a3 20 00 00 00    	jmp    DWORD PTR [ebx+0x20]
 516:	68 28 00 00 00       	push   0x28
 51b:	e9 90 ff ff ff       	jmp    4b0 <.plt>

00000520 <__libc_start_main@plt>:
 520:	ff a3 24 00 00 00    	jmp    DWORD PTR [ebx+0x24]
 526:	68 30 00 00 00       	push   0x30
 52b:	e9 80 ff ff ff       	jmp    4b0 <.plt>

Disassembly of section .text:

00000530 <_start>:
 530:	31 ed                	xor    ebp,ebp
 532:	5e                   	pop    esi
 533:	89 e1                	mov    ecx,esp
 535:	83 e4 f0             	and    esp,0xfffffff0
 538:	50                   	push   eax
 539:	54                   	push   esp
 53a:	52                   	push   edx
 53b:	e8 22 00 00 00       	call   562 <_start+0x32>
 540:	81 c3 b4 1a 00 00    	add    ebx,0x1ab4
 546:	8d 83 2c e7 ff ff    	lea    eax,[ebx-0x18d4]
 54c:	50                   	push   eax
 54d:	8d 83 bc e6 ff ff    	lea    eax,[ebx-0x1944]
 553:	50                   	push   eax
 554:	51                   	push   ecx
 555:	56                   	push   esi
 556:	ff b3 f8 ff ff ff    	push   DWORD PTR [ebx-0x8]
 55c:	e8 bf ff ff ff       	call   520 <__libc_start_main@plt>
 561:	f4                   	hlt    
 562:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 565:	c3                   	ret    
 566:	90                   	nop
 567:	90                   	nop
 568:	90                   	nop
 569:	90                   	nop
 56a:	90                   	nop
 56b:	90                   	nop
 56c:	90                   	nop
 56d:	90                   	nop
 56e:	90                   	nop
 56f:	90                   	nop

00000570 <__do_global_dtors_aux>:
 570:	55                   	push   ebp
 571:	89 e5                	mov    ebp,esp
 573:	56                   	push   esi
 574:	53                   	push   ebx
 575:	e8 ad 00 00 00       	call   627 <__i686.get_pc_thunk.bx>
 57a:	81 c3 7a 1a 00 00    	add    ebx,0x1a7a
 580:	83 ec 10             	sub    esp,0x10
 583:	80 bb 30 00 00 00 00 	cmp    BYTE PTR [ebx+0x30],0x0
 58a:	75 5d                	jne    5e9 <__do_global_dtors_aux+0x79>
 58c:	8b 83 f0 ff ff ff    	mov    eax,DWORD PTR [ebx-0x10]
 592:	85 c0                	test   eax,eax
 594:	74 0e                	je     5a4 <__do_global_dtors_aux+0x34>
 596:	8b 83 2c 00 00 00    	mov    eax,DWORD PTR [ebx+0x2c]
 59c:	89 04 24             	mov    DWORD PTR [esp],eax
 59f:	e8 3c ff ff ff       	call   4e0 <__cxa_finalize@plt>
 5a4:	8b 83 34 00 00 00    	mov    eax,DWORD PTR [ebx+0x34]
 5aa:	8d b3 18 ff ff ff    	lea    esi,[ebx-0xe8]
 5b0:	8d 93 14 ff ff ff    	lea    edx,[ebx-0xec]
 5b6:	29 d6                	sub    esi,edx
 5b8:	c1 fe 02             	sar    esi,0x2
 5bb:	83 ee 01             	sub    esi,0x1
 5be:	39 f0                	cmp    eax,esi
 5c0:	73 20                	jae    5e2 <__do_global_dtors_aux+0x72>
 5c2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 5c8:	83 c0 01             	add    eax,0x1
 5cb:	89 83 34 00 00 00    	mov    DWORD PTR [ebx+0x34],eax
 5d1:	ff 94 83 14 ff ff ff 	call   DWORD PTR [ebx+eax*4-0xec]
 5d8:	8b 83 34 00 00 00    	mov    eax,DWORD PTR [ebx+0x34]
 5de:	39 f0                	cmp    eax,esi
 5e0:	72 e6                	jb     5c8 <__do_global_dtors_aux+0x58>
 5e2:	c6 83 30 00 00 00 01 	mov    BYTE PTR [ebx+0x30],0x1
 5e9:	83 c4 10             	add    esp,0x10
 5ec:	5b                   	pop    ebx
 5ed:	5e                   	pop    esi
 5ee:	5d                   	pop    ebp
 5ef:	c3                   	ret    

000005f0 <frame_dummy>:
 5f0:	55                   	push   ebp
 5f1:	89 e5                	mov    ebp,esp
 5f3:	53                   	push   ebx
 5f4:	e8 2e 00 00 00       	call   627 <__i686.get_pc_thunk.bx>
 5f9:	81 c3 fb 19 00 00    	add    ebx,0x19fb
 5ff:	83 ec 14             	sub    esp,0x14
 602:	8b 93 1c ff ff ff    	mov    edx,DWORD PTR [ebx-0xe4]
 608:	85 d2                	test   edx,edx
 60a:	74 15                	je     621 <frame_dummy+0x31>
 60c:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 612:	85 c0                	test   eax,eax
 614:	74 0b                	je     621 <frame_dummy+0x31>
 616:	8d 93 1c ff ff ff    	lea    edx,[ebx-0xe4]
 61c:	89 14 24             	mov    DWORD PTR [esp],edx
 61f:	ff d0                	call   eax
 621:	83 c4 14             	add    esp,0x14
 624:	5b                   	pop    ebx
 625:	5d                   	pop    ebp
 626:	c3                   	ret    

00000627 <__i686.get_pc_thunk.bx>:
 627:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 62a:	c3                   	ret    
 62b:	90                   	nop

0000062c <func>:
 62c:	55                   	push   ebp
 62d:	89 e5                	mov    ebp,esp
 62f:	83 ec 48             	sub    esp,0x48
 632:	65 a1 14 00 00 00    	mov    eax,gs:0x14
 638:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 63b:	31 c0                	xor    eax,eax
 63d:	c7 04 24 8c 07 00 00 	mov    DWORD PTR [esp],0x78c
 644:	e8 fc ff ff ff       	call   puts <func+0x19>
 649:	8d 45 d4             	lea    eax,[ebp-0x2c]
 64c:	89 04 24             	mov    DWORD PTR [esp],eax
 64f:	e8 fc ff ff ff       	call   gets <func+0x24>
 654:	81 7d 08 be ba fe ca 	cmp    DWORD PTR [ebp+0x8],0xcafebabe
 65b:	75 0e                	jne    66b <func+0x3f>
 65d:	c7 04 24 9b 07 00 00 	mov    DWORD PTR [esp],0x79b
 664:	e8 fc ff ff ff       	call   system <func+0x39>
 669:	eb 0c                	jmp    677 <func+0x4b>
 66b:	c7 04 24 a3 07 00 00 	mov    DWORD PTR [esp],0x7a3
 672:	e8 fc ff ff ff       	call   puts <func+0x47>
 677:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
 67a:	65 33 05 14 00 00 00 	xor    eax,DWORD PTR gs:0x14
 681:	74 05                	je     688 <func+0x5c>
 683:	e8 fc ff ff ff       	call   684 <func+0x58>
 688:	c9                   	leave  
 689:	c3                   	ret    

0000068a <main>:
 68a:	55                   	push   ebp
 68b:	89 e5                	mov    ebp,esp
 68d:	83 e4 f0             	and    esp,0xfffffff0
 690:	83 ec 10             	sub    esp,0x10
 693:	c7 04 24 ef be ad de 	mov    DWORD PTR [esp],0xdeadbeef
 69a:	e8 8d ff ff ff       	call   62c <func>
 69f:	b8 00 00 00 00       	mov    eax,0x0
 6a4:	c9                   	leave  
 6a5:	c3                   	ret    
 6a6:	90                   	nop
 6a7:	90                   	nop
 6a8:	90                   	nop
 6a9:	90                   	nop
 6aa:	90                   	nop
 6ab:	90                   	nop
 6ac:	90                   	nop
 6ad:	90                   	nop
 6ae:	90                   	nop
 6af:	90                   	nop

000006b0 <__libc_csu_init>:
 6b0:	55                   	push   ebp
 6b1:	57                   	push   edi
 6b2:	56                   	push   esi
 6b3:	53                   	push   ebx
 6b4:	e8 6e ff ff ff       	call   627 <__i686.get_pc_thunk.bx>
 6b9:	81 c3 3b 19 00 00    	add    ebx,0x193b
 6bf:	83 ec 1c             	sub    esp,0x1c
 6c2:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
 6c6:	8d bb 0c ff ff ff    	lea    edi,[ebx-0xf4]
 6cc:	e8 a3 fd ff ff       	call   474 <_init>
 6d1:	8d 83 0c ff ff ff    	lea    eax,[ebx-0xf4]
 6d7:	29 c7                	sub    edi,eax
 6d9:	c1 ff 02             	sar    edi,0x2
 6dc:	85 ff                	test   edi,edi
 6de:	74 29                	je     709 <__libc_csu_init+0x59>
 6e0:	31 f6                	xor    esi,esi
 6e2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 6e8:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
 6ec:	89 2c 24             	mov    DWORD PTR [esp],ebp
 6ef:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 6f3:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 6f7:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 6fb:	ff 94 b3 0c ff ff ff 	call   DWORD PTR [ebx+esi*4-0xf4]
 702:	83 c6 01             	add    esi,0x1
 705:	39 fe                	cmp    esi,edi
 707:	75 df                	jne    6e8 <__libc_csu_init+0x38>
 709:	83 c4 1c             	add    esp,0x1c
 70c:	5b                   	pop    ebx
 70d:	5e                   	pop    esi
 70e:	5f                   	pop    edi
 70f:	5d                   	pop    ebp
 710:	c3                   	ret    
 711:	eb 0d                	jmp    720 <__libc_csu_fini>
 713:	90                   	nop
 714:	90                   	nop
 715:	90                   	nop
 716:	90                   	nop
 717:	90                   	nop
 718:	90                   	nop
 719:	90                   	nop
 71a:	90                   	nop
 71b:	90                   	nop
 71c:	90                   	nop
 71d:	90                   	nop
 71e:	90                   	nop
 71f:	90                   	nop

00000720 <__libc_csu_fini>:
 720:	f3 c3                	repz ret 
 722:	90                   	nop
 723:	90                   	nop
 724:	90                   	nop
 725:	90                   	nop
 726:	90                   	nop
 727:	90                   	nop
 728:	90                   	nop
 729:	90                   	nop
 72a:	90                   	nop
 72b:	90                   	nop
 72c:	90                   	nop
 72d:	90                   	nop
 72e:	90                   	nop
 72f:	90                   	nop

00000730 <__do_global_ctors_aux>:
 730:	55                   	push   ebp
 731:	89 e5                	mov    ebp,esp
 733:	56                   	push   esi
 734:	53                   	push   ebx
 735:	e8 ed fe ff ff       	call   627 <__i686.get_pc_thunk.bx>
 73a:	81 c3 ba 18 00 00    	add    ebx,0x18ba
 740:	8b 83 0c ff ff ff    	mov    eax,DWORD PTR [ebx-0xf4]
 746:	83 f8 ff             	cmp    eax,0xffffffff
 749:	74 19                	je     764 <__do_global_ctors_aux+0x34>
 74b:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 751:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 758:	83 ee 04             	sub    esi,0x4
 75b:	ff d0                	call   eax
 75d:	8b 06                	mov    eax,DWORD PTR [esi]
 75f:	83 f8 ff             	cmp    eax,0xffffffff
 762:	75 f4                	jne    758 <__do_global_ctors_aux+0x28>
 764:	5b                   	pop    ebx
 765:	5e                   	pop    esi
 766:	5d                   	pop    ebp
 767:	c3                   	ret    

Disassembly of section .fini:

00000768 <_fini>:
 768:	53                   	push   ebx
 769:	83 ec 08             	sub    esp,0x8
 76c:	e8 00 00 00 00       	call   771 <_fini+0x9>
 771:	5b                   	pop    ebx
 772:	81 c3 83 18 00 00    	add    ebx,0x1883
 778:	e8 f3 fd ff ff       	call   570 <__do_global_dtors_aux>
 77d:	83 c4 08             	add    esp,0x8
 780:	5b                   	pop    ebx
 781:	c3                   	ret    
